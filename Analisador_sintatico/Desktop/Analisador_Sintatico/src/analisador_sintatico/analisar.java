/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package analisador_sintatico;

import java.util.ArrayList;
import java.util.Stack;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;

/**
 *
 * @author Arthur
 */
public class analisar extends javax.swing.JFrame {

    /**
     * Creates new form analisar
     */
    Stack<String> pilha = new Stack();
    ArrayList <String> Token = new ArrayList();
    ArrayList <String> listaentrada = new ArrayList();
    ArrayList <String> var = new ArrayList();
    Telatabela t2 = new Telatabela();
    String[][]matriz ;
    int linhatam,colunatam;
    String entry; 
    
    public analisar() {
        initComponents();
        //pilha.push("$");
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        entra = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        analisae = new javax.swing.JButton();
        preenche = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        entra.setColumns(20);
        entra.setRows(5);
        jScrollPane1.setViewportView(entra);

        jLabel1.setText("Tokens:");

        analisae.setText("Analisar");
        analisae.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                analisaeActionPerformed(evt);
            }
        });

        preenche.setText("Preencher Tabela");
        preenche.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                preencheActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel2.setText("Analisador Sintático");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(analisae)
                .addGap(92, 92, 92)
                .addComponent(preenche)
                .addGap(77, 77, 77))
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(85, 85, 85)
                        .addComponent(jLabel2)))
                .addContainerGap(54, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                .addGap(30, 30, 30)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(analisae)
                    .addComponent(preenche))
                .addGap(23, 23, 23))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void preencheActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_preencheActionPerformed

        t2.setVisible(true);
        
    }//GEN-LAST:event_preencheActionPerformed

    private void analisaeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_analisaeActionPerformed
        
        Token = t2.getToken();
        linhatam = t2.getLinha_length();
        colunatam = t2.getColuna_length();
        int cont =0;
        int i=0;
        String aux="";
        entry =  entra.getText();
        var = t2.getVariaveis();
        int flag = 0;
  
        pilha.push("$");
        pilha.push(var.get(0));
        
        while(cont<entry.length()){ //adiciona a entrada numm arraylist           
            if(entry.charAt(cont)=='<'){
                i=cont+1;
                aux="";
                while(entry.charAt(i)!='>'){
                    aux+=""+entry.charAt(i);
                    i++;
                }  
                cont=i;
            }
            listaentrada.add(aux);
            cont++;
            
        }
        
        listaentrada.add("$");
        
        //System.out.println("Pilha" + pilha.pop());
        //int z = 0;
        System.out.println(listaentrada.toString());
        matriz= t2.getTabelinha();
        while(1 == 1){
        
        for(int x = 0; x< linhatam; x++){
            //System.out.println("pilha "+ pilha.peek());
            if(pilha.peek().equals(var.get(x))){//se encontrou a linha da variável
                
            for(int y = 1; y< colunatam; y++){// TODO Achar a coluna dos token
                
                if(listaentrada.get(0).equals(Token.get(y-1))){ //pega a coluna dos tokens pra encontrar em qual coluna está a transição
                    
                    cont = matriz[x][y].length();
                    if(cont == 0){
                        flag = 1;
                        break;
                    }
                    //System.out.println("matriz: " + matriz[x][y]);
                    pilha.pop();
                    aux="";
                    while(cont>0){            
                        i = cont-1;
                        aux = matriz[x][y].charAt(i) + aux;

                        
                        for(int j = 0; j < Token.size(); j++){
                            if(aux.equals(Token.get(j))){
                                //pilha.pop();
                                pilha.push(aux);
                                aux = "";
                            }
                        }
                        
                        for(int k = 0; k < var.size(); k++){
                            if(aux.equals(var.get(k))){
                                //pilha.pop();
                                pilha.push(aux);
                                aux = "";
                            }
                        }
                        
                        if(aux=="&"){
                            //pilha.pop();
                            aux = "";
                        }
                        
                        
                        cont = i + 1;
                        //listaentrada.
                        
                        //else pilha
                        cont--;
                    }
                    break;
                }
                
                }
            break;
            }
        }
            System.out.println("entrada: " + listaentrada.toString() + " - tamanho pilha: " + pilha.size() + " - " + pilha.peek());
        if(pilha.size() == 1){
            break;
        }else if(flag == 1){
            flag = 0;
            break;
        }
        if(listaentrada.get(0).contains(pilha.peek())){
                        pilha.pop();
                        listaentrada.remove(listaentrada.get(0));
                        System.out.println("removeu listaentrada: " + pilha.peek());
        }
   
    }
        if("$".equals(pilha.peek()) && listaentrada.get(0) == "$"){
            JOptionPane.showMessageDialog(null, "Reconhecido");
                        //break;
        }
        else{
            JOptionPane.showMessageDialog(null, "Não Reconhecido");
                        //break;
        }    
        
//        Token.clear();
        pilha.clear();
        listaentrada.clear();
//        var.clear();

        
    }//GEN-LAST:event_analisaeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(analisar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(analisar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(analisar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(analisar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new analisar().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton analisae;
    private javax.swing.JTextArea entra;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton preenche;
    // End of variables declaration//GEN-END:variables
}
